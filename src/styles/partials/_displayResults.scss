.error {
  text-align: center;
  font-weight: 700;
}

// USER SELECTION
.containerUserSelectionBackground {
  background-image: linear-gradient(to right, $green, $blue);
}

.containerUserSelection{
  @include flex(row, nowrap, space-between, center);
  // background-image: linear-gradient(to right, $green, $blue);
  margin: 0;
  padding-top:15px;

  .containerUsers {
    @include flex(row, nowrap, flex-start, flex-start);
    input[type="radio"] {
      opacity:0; 
    }
  }

// give each radio a same class, put box next to radio button, radio button:checked + whatever the box's div 

  .user{
    // border: 1px solid black;
    border-radius: 8px 8px 0 0;
    height:150px;
    margin-right:3px;
    // padding: 1%;
    width:200px;
    height: 100%;
    position: relative;
    &:active,
    &:focus {
      background:white;
    }

    .perUserContents {
      @include flex(row, null, null, null);
      
    }

    input[type="radio"] + div {
      padding:5px;
      height:150px;
    }
    
    input[type="radio"]:checked + div {
      background:white;
      // border: 1px solid black;
      border-radius: 8px 8px 0 0;

    }

    svg {
      font-size: 2.5rem;
      padding-right: 5px;
    }

    svg,
    label {
      color: $navy;
    }

    label {
      text-transform: uppercase;
      font-size: .65rem;
      font-weight: 900;
      letter-spacing: 1px;
    }

    input[type="radio"] {
      cursor: pointer;
      // opacity: 0;
      @include position(0, null, null, 0);
      width: 100%;
      height: 100%;
    }

    p {
      font-size: .7rem;
    }
  }
}

.containerUsersButtons {
  display:flex;
  flex-direction: row;
  max-width:50%;
  svg {
    color: $green;
  }
}

// FILTER EVENTS
.containerFilterEvents {
  @include flex(row, nowrap, center, space-between);
  input,
  button {
    margin:2px;
  }
}