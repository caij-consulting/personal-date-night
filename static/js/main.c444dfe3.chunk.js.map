{"version":3,"sources":["components/Intro.js","components/SearchForm.js","components/ResultCard.js","components/DisplayLinks.js","components/Modal.js","components/DisplayResults.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Intro","react_default","a","createElement","className","Component","SearchForm","addOneHourToTime","time","hour","parseInt","substr","minute","concat","_this2","this","action","htmlFor","Object","defineProperty","type","name","required","pattern","onChange","e","props","handleChange","value","location","entry_default","format","date","dist_entry_default","timeStart","disableClock","minTime","timeEnd","onClick","onSubmit","to","ResultCard","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","priceInfo","event","priceString","priceRanges","minPrice","min","maxPrice","max","currency","displayDate","daysOfWeek","monthsOfYear","dates","start","localTime","dateObj","Date","localDate","day","getDay","getDate","month","getMonth","getHours","getMinutes","ampm","selectedActive","state","eventId1","id","currentUser","eventId2","console","log","tabIndex","handleEventSelectRadio","checked","src","images","url","alt","_embedded","venues","city","nextProps","prevState","user1choice","user2choice","eventName2","DisplayLinks","closeModal","aria-label","index_es","aria-hidden","icon","children","href","target","Modal","modal","components_DisplayLinks","modalIsOpen","DisplayResults","handleUserChangeRadio","setState","confirmBothUsersChoices","preventDefault","allEvents","activeUser","scroller","scrollTo","duration","delay","smooth","aria-required","components_Modal","reset","textFilter","placeholder","categoryDropdown","eventCategories","map","category","i","key","venueDropdown","eventVenues","venue","filterEvents","resetFilters","filteredEvents","eventObject","components_ResultCard","Footer","rel","library","add","fab","faCheckDouble","faCheck","faUser","faTimes","App","displayResult","formatDate","dateObject","year","getFullYear","hours","minutes","getTicketmasterData","startDate","endDate","axios","get","params","apikey","localStartEndDateTime","then","response","data","page","totalElements","events","isLoading","getEventCategories","getEventVenues","error","length","eventCategory","classifications","segment","includes","push","eventVenue","toConsumableArray","filter","eventObj","trim","toUpperCase","parse","startDateTime","endDateTime","userCategory","userVenue","components_Intro","components_SearchForm","components_DisplayResults","components_Footer","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c444dfe3.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Intro extends Component {\n  render() {\n    return(\n      <div className=\"heroIntro\">\n        <h1>Personal <span>Date Night</span></h1>\n        <p>Sometimes you just need a break from your partner but you already got a babysitter. Now couples can go to different events in similar locations and at the same time.</p>\n      </div>\n    )\n  }\n}\n\nexport default Intro;","import React, { Component } from 'react';\nimport DatePicker from 'react-date-picker';\nimport TimePicker from 'react-time-picker';\n\n// import DateTimePicker from 'react-datetime-picker';\n\nclass SearchForm extends Component{\n  //error handling function. if startTime is \"10:00\", make sure the endTime is atleast \"11:00\"\n  addOneHourToTime = (time) => {\n    if(time){\n        let hour = parseInt(time.substr(0,2),10)\n        if (hour >= 23){\n            hour = \"00\"\n        }\n        else{\n            hour = hour+1;\n            if (hour<10){\n                hour = `0`+hour;\n            }\n        }\n        let minute=parseInt(time.substr(3,5),10);\n        if (minute<10){\n            minute = `0`+ minute;\n        }\n        \n        let newTime=`${hour}:${minute}`;\n        \n        return newTime\n    }\n}\n\n  render(){\n    return (\n      <div className=\"heroForm\">\n\n        <form action=\"#\">\n          <div className=\"heroFormBlock\">\n            <label className=\"heroFormLabelMain\" htmlFor=\"location\">Which city are you searching in?</label>\n            <div className=\"HeroFormInputContainer\">\n              <input \n              type=\"text\" \n              name=\"location\"\n              required pattern=\"[a-zA-Z]*\"\n              onChange={(e)=> {this.props.handleChange(e)}}\n              value={this.props.location}\n              required\n              />\n            </div>\n          </div>\n\n          <div className=\"heroFormBlock\">\n            <label className=\"heroFormLabelMain\">Which date?</label>\n            <div className=\"HeroFormInputContainer\">\n              <DatePicker\n                onChange={(e, name)=> {this.props.handleChange(e, \"date\")}}\n                format=\"y-MM-dd\"\n                name=\"date\"\n                value={this.props.date}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"heroFormBlock\">\n            <label className=\"heroFormLabelMain\">What time range?</label>\n            <div>\n              <div>\n                <div className=\"heroFormBlockTime\">\n                  <div>\n                    <label htmlFor=\"time\">From</label>\n                    <TimePicker\n                      format=\"h:mm a\"\n                      name=\"timeStart\"\n                      onChange={(e, name)=> {this.props.handleChange(e, \"timeStart\")}}\n                      value={this.props.timeStart}\n                      disableClock\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"time\">Until</label>\n                    <TimePicker\n                      format=\"h:mm a\"\n                      name=\"timeEnd\"\n                      minTime={this.addOneHourToTime(this.props.timeStart)}\n                      onChange={(e, name)=> {this.props.handleChange(e, \"timeEnd\")}}\n                      value={this.props.timeEnd}\n                      disableClock\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"heroFormBlock\">\n            <button onClick={this.props.onSubmit} className=\"resultsTop green large\" to=\"resultsTop\">find events</button>\n          </div>\n        </form>\n        \n      </div>\n    )\n  }\n}\n\nexport default SearchForm;","import React, { Component } from 'react';\n\nclass ResultCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n        eventId1: \"\",\n        eventId2: \"\"\n    }\n  }\n  priceInfo = (event) => {\n    let priceString = \"\";\n    if (event.priceRanges){\n      let minPrice = event.priceRanges[0].min;\n      let maxPrice = event.priceRanges[0].max;\n      let currency = event.priceRanges[0].currency;\n      if (minPrice === maxPrice){\n        priceString = `Price: ${minPrice} ${currency}`\n      }\n      else{\n        priceString = `Price Range: ${minPrice} - ${maxPrice} ${currency}`\n      }\n    }\n    else{\n      priceString = \"Price Unavailable\"\n    }\n    return priceString\n  }\n  displayDate = (event) =>{\n    let daysOfWeek = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n    let monthsOfYear =['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    if (event.dates.start.localTime){\n      let dateObj = new Date(`${event.dates.start.localDate}T${event.dates.start.localTime}`)\n      let day = dateObj.getDay();\n      let date = dateObj.getDate();\n      let month = dateObj.getMonth();\n      let hour = dateObj.getHours();\n      let minute = dateObj.getMinutes();\n      if (minute < 10){\n        minute = '0' + minute;\n      }\n      let ampm = \"\";\n      if (hour < 12){\n        ampm = \"AM\";\n      }\n      if(hour = 12){\n        ampm = \"PM\";\n        hour = 12\n      }\n      else{\n        ampm = \"PM\";\n        hour = hour - 12\n      }\n      let dateToDisplay = `${daysOfWeek[day]}, ${monthsOfYear[month]} ${date}, ${hour}:${minute} ${ampm}`\n      return dateToDisplay;\n\n    }\n    else{\n      let dateObj = new Date(`${event.dates.start.localDate}T00:00:00`);\n      let day = dateObj.getDay();\n      let date = dateObj.getDate();\n      let month = dateObj.getMonth();\n      let dateToDisplay = `${daysOfWeek[day]}, ${monthsOfYear[month]} ${date}`\n      return dateToDisplay;\n    }\n  }\n  selectedActive = (event) => {\n    if (this.state.eventId1 === event.id && this.props.currentUser === \"1\" || this.state.eventId2 === event.id && this.props.currentUser === \"2\") {\n      console.log(\"working\")\n      return \"activeEvent\"\n    }\n    else if (this.state.eventId1 === event.id && this.props.currentUser === \"2\" || this.state.eventId2 === event.id && this.props.currentUser === \"1\") {\n      console.log(\"working\")\n      return \"disabledEvent\"\n    }\n    console.log(\"not working\")\n    return \"\";\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.user1choice.id !== prevState.eventId1) {\n      return { eventId1: nextProps.user1choice.id };\n\n    }\n    else if (nextProps.user2choice.name !== prevState.eventName2) {\n      return { eventId2: nextProps.user2choice.id };\n    }\n    else return null;\n  }\n  render() {\n    this.displayDate(this.props.event)\n    return (\n      <div className={`resultCard ${(this.selectedActive(this.props.event))}`}>\n        <form action=\"\" className=\"innerResultCard\">\n          <label htmlFor=\"selectedEvent\"></label>\n          <input\n            type=\"radio\"\n            tabIndex=\"0\"\n            id={this.props.event.id}\n            name={this.props.name}\n            onChange={(e) => this.props.handleEventSelectRadio(e, this.props.event)}\n            checked={this.props.event.id === this.state.eventId1 || this.props.event.id === this.state.eventId2}\n          />\n          <div>\n            <div className=\"resultCard-imgContainer\">\n              <img src={this.props.event.images[1].url} alt={`image for ${this.props.event.name}`} />\n            </div>\n            <div className=\"eventDetails\">\n              <h3>{this.props.event.name}</h3>\n              <p>{this.displayDate(this.props.event)}</p>\n              <p className=\"location\">{this.props.event._embedded.venues[0].name}, {this.props.event._embedded.venues[0].city.name}</p>\n              <p className=\"priceString\">{this.priceInfo(this.props.event)}</p>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n  // render() {\n  //   this.displayDate(this.props.event)\n  //   return (\n  //     // <div className className={`selection ${(this.selectedActive(this.props.event))}`}>\n  //       <form action=\"\" className=\"resultcard\">\n  //         <label htmlFor=\"selectedEvent\"></label>\n  //         <input \n  //           type=\"radio\"\n  //           tabIndex=\"0\" \n  //           id={this.props.event.id} \n  //           name={this.props.name}\n  //           onChange={(e) => this.props.handleEventSelectRadio(e, this.props.event)}\n  //           checked={this.props.event.id === this.state.eventId1 || this.props.event.id === this.state.eventId2}\n  //         />\n  //         <div>\n  //           <div className=\"resultCard-imgContainer\">\n  //             <img src={this.props.event.images[1].url} alt={`image for ${this.props.event.name}`}/>\n  //           </div>\n  //           <div className=\"eventDetails\">\n  //             <h3>{this.props.event.name}</h3>\n  //             <p>{this.displayDate(this.props.event)}</p>\n  //             <p className=\"location\">{this.props.event._embedded.venues[0].name}, {this.props.event._embedded.venues[0].city.name}</p>\n  //             <p className=\"priceString\">{this.priceInfo(this.props.event)}</p>\n  //           </div>\n  //         </div>\n  //       </form>\n  //     // </div>\n    \n        \n  //   )\n  // }\n}\nexport default ResultCard;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass DisplayLinks extends Component {\n\n  render() {\n    return(\n\n      <div className=\"toLinks modalContent\" tabIndex=\"-1\">\n      <button\n          onClick={this.props.closeModal}\n          aria-label=\"click to close the modal\">\n          <FontAwesomeIcon aria-hidden=\"true\" aria-label=\"close the box\" icon=\"times\" />\n      </button>\n        <div>{this.props.children}</div>\n\n        <h2>Congratulations! You've both successfully chosen your events!</h2>\n        <p>You can buy your tickets here:</p>\n        <p>User One: <a href={this.props.user1choice.url} target=\"_blank\" aria-label=\"Click to get your tickets here!\">{this.props.user1choice.name}</a> </p>\n      \n        <p>User Two: <a href={this.props.user2choice.url} target=\"_blank\" aria-label=\"Click to get your tickets here!\">{this.props.user2choice.name}</a></p>\n      </div>\n    );\n  }\n}\n\nexport default DisplayLinks;","import React, { Component } from 'react';\nimport DisplayLinks from './DisplayLinks.js';\n\nclass Modal extends Component {\n  render() {\n    let modal = (\n      <div className=\"modalOverlay\" aria-hidden=\"true\">\n        <DisplayLinks \n          user1choice={this.props.user1choice}\n          user2choice={this.props.user2choice}\n          closeModal={this.props.closeModal}\n        />\n      </div>\n    );\n\n    if (!this.props.modalIsOpen) {\n      modal = null;\n    }\n\n    return (\n      <div>\n        {modal}\n      </div>\n    )\n  }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport ResultCard from \"./ResultCard.js\";\nimport { animateScroll as scroll, scroller } from 'react-scroll';\nimport Modal from \"./Modal.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass DisplayResults extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allEvents: [],\n      // add in error handling for \"you have not chosen your event yet\"\n      user1choice: \"\",\n      user2choice: \"\",\n      currentUser: \"1\",\n      modalIsOpen: false,\n      activeUser: false,\n    }\n  }\n\n  handleUserChangeRadio = (e) => {\n    this.setState({\n      //sets currentUser to be either User1 or User2 on toggle\n      currentUser: e.target.value\n    })\n  }\n  handleEventSelectRadio = (e, event) =>{\n    // e.preventDefault()\n    console.log(e)\n    if(this.state.currentUser===\"1\"){\n      this.setState({\n        user1choice: event,\n      })\n    }\n    if (this.state.currentUser === \"2\") {\n      this.setState({\n        user2choice: event,\n      })\n    }\n  }\n  scrollLinks() {\n    scroller.scrollTo('toLinks', {\n      duration: 800,\n      delay: 0,\n      smooth: 'easeInOutQuart'\n    })\n  } \n  \n  confirmBothUsersChoices = (e)=>{\n    e.preventDefault();\n    this.setState({\n      modalIsOpen: true\n    })\n  }\n\n  closeModal = (e) => {\n    e.preventDefault();\n    this.setState({\n      modalIsOpen:false\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"displayEvents\">\n        <div className=\"containerUserSelectionBackground\">\n          <div className=\"wrapper\">\n            <form action=\"\" className=\"containerUserSelection\">\n          \n              <div className=\"containerUsers\">\n                <div className=\"user\">\n                  <div>\n                    <input onChange={(e) => { this.handleUserChangeRadio(e) }}\n                      type=\"radio\"\n                      // tabIndex=\"0\"\n                      className=\"selectedUser\"\n                      name=\"currentUser\"\n                      id=\"user1\"\n                      value=\"1\"\n                      aria-label=\"select for user one\"\n                      aria-required=\"true\"\n                      checked={this.state.currentUser === \"1\"}\n                    />\n                    <div className=\"perUserContents\">\n                      <FontAwesomeIcon icon=\"user\" aria-hidden=\"true\" />\n                      <div>\n                        <label htmlFor=\"user1\">user one</label>\n                        {this.state.user1choice ? <p>{this.state.user1choice.name} </p>: <p>You haven't chosen your event yet</p>}\n                      </div>\n                    </div>\n                  </div>\n                </div>     \n\n                <div className=\"user\">\n                  <div>\n                    <input\n                      onChange={(e) => { this.handleUserChangeRadio(e) }}\n                      type=\"radio\"\n                      // tabIndex=\"0\"\n                      className=\"selectedUser\"\n                      name=\"currentUser\"\n                      id=\"user2\"\n                      value=\"2\"\n                      aria-label=\"select for user two\"\n                      aria-required=\"true\"\n                      checked={this.state.currentUser === \"2\"}\n\n\n                    />\n                    <div className=\"perUserContents\">\n                      <FontAwesomeIcon icon=\"user\" aria-hidden=\"true\" />\n                      <div>\n                        <label htmlFor=\"user2\">user two</label>\n                        {this.state.user2choice ? <p>{this.state.user2choice.name} </p> : <p>You haven't chosen your event yet</p>}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"containerUsersButtons\">\n                {this.state.user1choice && this.state.user2choice\n                ? <div>\n                    <button className=\"navy med\"\n                      onClick={(e) => {\n                        this.confirmBothUsersChoices(e)\n                      }}\n                      aria-label=\"Confirm choices of user one and user two\"\n                      >\n                      \n                      Confirm Both Events\n                      \n                      <FontAwesomeIcon icon=\"check-double\" aria-hidden=\"true\" /> \n                    </button>\n\n                    <Modal\n                      user1choice={this.state.user1choice}\n                      user2choice={this.state.user2choice}\n                      modalIsOpen={this.state.modalIsOpen}\n                      closeModal={(e) => this.closeModal(e)}\n                    ></Modal>\n                  </div>\n                : \"\"} \n                <button className=\"white med\" aria-label=\"Reloads the page to start a new search\" reset={this.reset}>New Search</button>           \n              </div>\n            </form>\n          </div>\n        </div>\n\n        <div className=\"displayContent wrapper\">\n          <form action=\"submit\">\n            <div className=\"containerFilterEvents\">\n              <div className=\"filterFields\">\n                <label className=\"visuallyHidden\" htmlFor=\"textFilter\">Enter text to filter</label>\n                <input\n                  type=\"text\"\n                  onChange={(e) => { this.props.handleChange(e) }}\n                  name=\"textFilter\"\n                  value={this.props.textFilter}\n                  placeholder=\"Enter text to filter\"\n                  aria-label=\"Enter text to filter events\"\n                  />\n                <label className=\"visuallyHidden\" htmlFor=\"allCategories\">Event Categories</label>\n                <select\n                  onChange={(e) => { this.props.handleChange(e) }}\n                  name=\"categoryDropdown\" \n                  value={this.props.categoryDropdown}\n                  id=\"allCategories\">\n                  {this.props.eventCategories.map((category, i) => {\n                    return (\n                        <option value={category} key={i}> {category} </option>\n                    )\n                    }\n                  )}\n                </select>\n                \n                <label className=\"visuallyHidden\" htmlFor=\"allVenues\">All Venues</label>\n                <select\n                  onChange={(e) => { this.props.handleChange(e) }}\n                  name=\"venueDropdown\"\n                  value={this.props.venueDropdown}\n                  id=\"allVenues\">\n                  {this.props.eventVenues.map((venue, i) => {\n                    return (\n                      <option value={venue} key={i}> {venue} </option>\n                    )\n                  })}\n                </select>\n              </div>\n              <div className=\"filterButtons\">\n                <button className=\"green small\"\n                  onClick={(e) => this.props.filterEvents(e, this.props.textFilter, this.props.categoryDropdown, this.props.venueDropdown)}>Filter</button>  \n                <button className=\"white small\" onClick={(e)=>this.props.resetFilters(e)}>Reset Filter</button>\n              </div>\n            </div>\n          </form>\n        \n          <div className=\"containerResultCard\"> \n          {\n          this.props.filteredEvents.map((eventObject) => {\n            return (\n              <ResultCard\n                key={eventObject.id}\n                event={eventObject}\n                handleEventSelectRadio={this.handleEventSelectRadio}\n                user1choice={this.state.user1choice}\n                user2choice={this.state.user2choice}\n                tabIndex=\"0\"\n                currentUser={this.state.currentUser}\n\n              />\n            )\n          })}\n\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\nexport default DisplayResults;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return(\n      <footer>\n        <p>Created by CAIJ Consulting: <a href=\"http://www.canrozanes.com/\" target=\"_blank\" aria-label=\"go to Can Rozanes's website\" rel=\"noopener noreferrer\">Can</a>, <a href=\"http://www.anniebombanie.com\" target=\"_blank\" aria-label=\"go to Annie Liew's website\" rel=\"noopener noreferrer\">Annie</a>, <a href=\"http://www.irenetruong.com/\" target=\"_blank\" aria-label=\"go to Irene Truong's website\" rel=\"noopener noreferrer\">Irene</a>, and <a href=\"http://www.jamieyeung.ca/\" target=\"_blank\" aria-label=\"go to Jamie Yeung's website\" rel=\"noopener noreferrer\">Jamie</a> | Powered by <a href=\"https://developer.ticketmaster.com/products-and-docs/apis/getting-started/\" target=\"_blank\" aria-label=\"go to Ticketmaster's API website\" rel=\"noopener noreferrer\">Ticketmaster</a></p>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Intro from \"./components/Intro.js\";\nimport SearchForm from \"./components/SearchForm.js\";\nimport DisplayResults from \"./components/DisplayResults.js\";\nimport Footer from \"./components/Footer.js\"\nimport \"./styles/App.scss\";\nimport { animateScroll as scroll, scroller } from 'react-scroll';\n\n// font awesome library\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faCheckDouble, faCheck, faUser, faTimes, faSortDown } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, faCheckDouble, faCheck, faUser, faTimes)\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allEvents: [],\n      timeStart: \"12:00\",\n      timeEnd: \"23:00\",\n      date: new Date(),\n      location: \"Toronto\",\n      filteredEvents: [],\n      eventCategories: [],\n      userCategory: \"\",\n      eventVenues: [],\n      userVenue: \"\",\n      isLoading: true,\n      displayResult: false,\n      textFilter: \"\",\n      categoryDropdown: \"\",\n      venueDropdown: \"\",\n      error: false,\n    }\n  }\n\n  handleChange = (e, name) => {\n    // our location gets the object but for dateTimePicker we get the actual value \n    // if the item onChange has (name) tsParameterProperty, do the following:\n    if (name) {\n      this.setState({\n        [name]: e\n      })\n    } else {\n      // this is for location...\n      this.setState({\n        [e.target.name]: e.target.value\n      })\n    }\n  }\n\n  reset = () => {\n    this.setState({\n      displayResult: false,\n    })\n  }\n\n  // convert time function to string so it can be passed as a number in template literals \n  formatDate = (dateObject, time) => {\n    let year = dateObject.getFullYear();\n    let month = dateObject.getMonth() + 1;\n    if (month < 10) {\n      month = '0' + month;\n    }\n    let day = dateObject.getDate();\n    if (day < 10) {\n      day = '0' + day;\n    }\n    let hours = time.substr(0, 2);\n    // console.log(hours);\n    let minutes = time.substr(3, 5);\n    // console.log(minutes);\n    let dateString = `${year}-${month}-${day}T${hours}:${minutes}:00`;\n    return dateString\n  }\n\n  //time input format localStartEndDateTime=2019-06-05T17:00:00,2019-06-05T20:00:00 \n  getTicketmasterData = (location, startDate, endDate) => {\n    axios.get(`https://app.ticketmaster.com/discovery/v2/events.json`, {\n      params: {\n        apikey: \"cpqJuV2A3YqkXOJylkTrDzVGLRKZ5hp5\",\n        city: location,\n        localStartEndDateTime: `${startDate}, ${endDate}`,\n      }\n      // in-case CORS error comes back\n      // dataResponse: \"jsonp\",     \n    }).then((response) => {\n      console.log(response)\n      if (response.data.page.totalElements > 0) {\n        console.log('the call returns something')\n        response = response.data._embedded.events;\n        this.setState({\n          // allEvents is the good return we never modify\n          allEvents: response,\n          // filteredEvents is the item we want to modify based on user input\n          filteredEvents: response,\n          isLoading: false,\n        })\n        this.getEventCategories();\n        this.getEventVenues();\n      }\n      else {\n        this.setState({\n          error: true\n        })\n\n      }\n    })\n  }\n\n  getEventCategories = () => {\n    // loop through all events \n    let eventCategories = [\"All Categories\"];\n    for (let i = 0; i < this.state.allEvents.length; i++) {\n      let eventCategory = this.state.allEvents[i].classifications[0].segment.name;\n      console.log(eventCategory);\n      if (!eventCategories.includes(eventCategory)) {\n        eventCategories.push(eventCategory)\n      }\n    }\n    console.log(eventCategories);\n    this.setState({\n      // ... copies the items to the array\n      eventCategories: [...eventCategories],\n    })\n  }\n\n  getEventVenues = () => {\n    // loop through all events \n    let eventVenues = [\"All Venues\"];\n    for (let i = 0; i < this.state.allEvents.length; i++) {\n      let eventVenue = this.state.allEvents[i]._embedded.venues[0].name;\n      if (!eventVenues.includes(eventVenue)) {\n        eventVenues.push(eventVenue)\n      }\n    }\n    console.log(eventVenues);\n    this.setState({\n      // ... copies the items to the array\n      eventVenues: [...eventVenues],\n    })\n  }\n\n  filterEvents = (e, textFilter, categoryDropdown, venueDropdown) => {\n    e.preventDefault();\n    let copyOfAllEvents = [...this.state.allEvents];\n\n    const filteredEvents = copyOfAllEvents.filter((eventObj) => {\n      if (textFilter.trim().length > 0) {\n        return eventObj.name.toUpperCase().includes(textFilter.toUpperCase())\n      } else {\n        return true;\n      }\n    })\n      .filter((eventObj) => {\n        if (categoryDropdown === \"All Categories\") {\n          return true;\n        }\n        else {\n          return eventObj.classifications[0].segment.name.includes(categoryDropdown);\n        }\n      })\n      .filter((eventObj) => {\n        if (venueDropdown === \"All Venues\") {\n          return true;\n        }\n        else {\n          return eventObj._embedded.venues[0].name.includes(venueDropdown);\n        }\n      })\n    this.setState({\n      filteredEvents: [...filteredEvents],\n    })\n  }\n  resetFilters = (e) => {\n    e.preventDefault();\n    this.filterEvents(e, \"\", \"All Categories\", \"All Venues\")\n    this.setState({\n      textFilter: \"\",\n      categoryDropdown: \"All Categories\",\n      venueDropdown: \"All Venues\",\n    })\n  }\n\n  scrollTo() {\n    scroller.scrollTo(\"resultsTop\", {\n      duration: 800,\n      delay: 0,\n      smooth: \"easeInOutQuart\"\n    })\n  }\n  //time input format localStartEndDateTime=2019-06-05T17:00:00,2019-06-05T20:00:00 \n  onSubmit = (e) => {\n    e.preventDefault();\n    this.scrollTo();\n\n    if (this.state.timeStart && this.state.timeEnd && this.state.location &&\n      Date.parse(`01/01/2011 ${this.state.timeEnd}:00`) > Date.parse(`01/01/2011 ${this.state.timeStart}:00`)) {\n      this.setState({\n        displayResult: true,\n      })\n      const startDateTime = this.formatDate(this.state.date, this.state.timeStart);\n      const endDateTime = this.formatDate(this.state.date, this.state.timeEnd);\n      const location = this.state.location;\n      this.getTicketmasterData(location, startDateTime, endDateTime);\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <div className=\"hero wrapper\">\n            <div className=\"heroInnerContainer\">\n              <div className=\"heroBorderMiddle\">\n                <Intro />\n                <SearchForm\n                  timeStart={this.state.timeStart}\n                  timeEnd={this.state.timeEnd}\n                  date={this.state.date}\n                  handleChange={this.handleChange}\n                  onSubmit={this.onSubmit}\n                  location={this.state.location}\n                />\n              </div>\n            </div>\n          </div>\n        </header>\n\n        <main className=\"resultsTop\">\n\n          <div>\n\n            {this.state.error\n              ? (\n                <div className=\"error wrapper\">\n                  <p>Sorry, your search didn't return any events. Please adjust your search and try again.</p>\n                </div>\n              )\n              : (\n                (this.state.displayResult && (\n                  this.state.isLoading\n                    //display loading while api results being returned\n                    ? <h1>Getting Your Events...</h1>\n                    : <DisplayResults\n                      date={this.state.date}\n                      timeStart={this.state.timeStart}\n                      timeEnd={this.state.timeEnd}\n                      location={this.state.location}\n                      eventVenues={this.state.eventVenues}\n                      handleChange={this.handleChange}\n                      textFilter={this.state.textFilter}\n                      allEvents={this.state.allEvents}\n                      filteredEvents={this.state.filteredEvents}\n                      eventCategories={this.state.eventCategories}\n                      categoryDropdown={this.state.categoryDropdown}\n                      venueDropdown={this.state.venueDropdown}\n                      filterEvents={this.filterEvents}\n                      resetFilters={this.resetFilters}\n                    />\n                ))\n              )\n            }\n          </div>\n        </main>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}