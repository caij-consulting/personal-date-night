{"version":3,"sources":["components/Intro.js","components/SearchForm.js","components/ResultCard.js","components/DisplayLinks.js","components/Modal.js","components/DisplayResults.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Intro","react_default","a","createElement","className","Component","SearchForm","addOneHourToTime","time","hour","parseInt","substr","minute","concat","_this2","this","action","htmlFor","Object","defineProperty","type","name","required","pattern","onChange","e","props","handleChange","value","location","entry_default","format","date","minDate","Date","dist_entry_default","timeStart","disableClock","minTime","timeEnd","onClick","onSubmit","to","ResultCard","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","priceInfo","event","priceString","priceRanges","minPrice","min","maxPrice","max","currency","displayDate","daysOfWeek","monthsOfYear","dates","start","localTime","dateObj","localDate","day","getDay","getDate","month","getMonth","getHours","getMinutes","ampm","selectedActive","state","eventId1","id","currentUser","eventId2","tabIndex","handleEventSelectRadio","checked","src","images","url","alt","_embedded","venues","city","nextProps","prevState","user1choice","user2choice","eventName2","DisplayLinks","loopFocus","modalRef","current","focus","React","createRef","href","onTransitionEnd","aria-hidden","ref","closeModal","aria-label","index_es","icon","children","target","rel","Modal","modal","components_DisplayLinks","modalIsOpen","DisplayResults","handleUserChangeRadio","setState","confirmBothUsersChoices","preventDefault","allEvents","activeUser","handleScroll","bind","assertThisInitialized","scroll","window","scrollY","scroller","scrollTo","duration","delay","smooth","barToFix","document","querySelector","top","offsetTop","height","offsetHeight","addEventListener","body","style","paddingTop","aria-required","components_Modal","reset","textFilter","placeholder","categoryDropdown","eventCategories","map","category","i","key","venueDropdown","eventVenues","venue","filterEvents","resetFilters","filteredEvents","eventObject","components_ResultCard","Footer","library","add","fab","faCheckDouble","faCheck","faUser","faTimes","App","displayResult","formatDate","dateObject","year","getFullYear","hours","minutes","getTicketmasterData","startDate","endDate","axios","get","params","apikey","localStartEndDateTime","then","response","data","page","totalElements","events","isLoading","getEventCategories","getEventVenues","error","length","eventCategory","classifications","segment","includes","push","eventVenue","toConsumableArray","filter","eventObj","trim","toUpperCase","parse","startDateTime","endDateTime","userCategory","userVenue","components_Intro","components_SearchForm","components_DisplayResults","components_Footer","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74368015.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Intro extends Component {\n  render() {\n    return(\n      <div className=\"heroIntro\">\n        <h1>Personal <span>Date Night</span></h1>\n        <p>Sometimes you just need a break from your partner but you already got a babysitter. Now couples can go to different events in similar locations and at the same time.</p>\n      </div>\n    )\n  }\n}\n\nexport default Intro;","import React, { Component } from \"react\";\n// importing libraries\nimport DatePicker from \"react-date-picker\";\nimport TimePicker from \"react-time-picker\";\n\nclass SearchForm extends Component{\n  //error handling function. if startTime is \"10:00\", make sure the endTime is atleast \"11:00\"\n  addOneHourToTime = (time) => {\n    if(time){\n      let hour = parseInt(time.substr(0,2),10)\n      if (hour >= 23){\n          hour = \"00\"\n      }\n      else{\n          hour = hour+1;\n          if (hour<10){\n            hour = `0`+hour;\n        }\n      }\n      let minute=parseInt(time.substr(3,5),10);\n      if (minute<10){\n        minute = `0`+ minute;\n      }        \n      let newTime=`${hour}:${minute}`;\n      return newTime\n  }\n}\n\n  render(){\n    return (\n      <div className=\"heroForm\">\n\n        <form action=\"#\">\n          <div className=\"heroFormBlock\">\n            <label className=\"heroFormLabelMain\" htmlFor=\"location\">Which city are you searching in?</label>\n            <div className=\"HeroFormInputContainer\">\n              <input \n              type=\"text\" \n              name=\"location\"\n              required pattern=\"[a-zA-Z]*\"\n              onChange={(e)=> {this.props.handleChange(e)}}\n              value={this.props.location}\n              required={true}\n              />\n            </div>\n          </div>\n\n          <div className=\"heroFormBlock\">\n            <label className=\"heroFormLabelMain\">Which date?</label>\n            <div className=\"HeroFormInputContainer\">\n              <DatePicker\n                onChange={(e, name)=> {this.props.handleChange(e, \"date\")}}\n                format=\"y-MM-dd\"\n                name=\"date\"\n                value={this.props.date}\n                required={true}\n                minDate={new Date()}\n            />\n            </div>\n          </div>\n\n          <div className=\"heroFormBlock\">\n            <label className=\"heroFormLabelMain\">What time range?</label>\n            <div>\n              <div>\n                <div className=\"heroFormBlockTime\">\n                  <div className=\"perTimeContainer\">\n                    <label htmlFor=\"time\">From</label>\n                    <TimePicker\n                      format=\"h:mm a\"\n                      name=\"timeStart\"\n                      onChange={(e, name)=> {this.props.handleChange(e, \"timeStart\")}}\n                      value={this.props.timeStart}\n                      disableClock\n                      required={true}\n                    />\n                  </div>\n                  <div className=\"perTimeContainer\">\n                    <label htmlFor=\"time\">Until</label>\n                    <TimePicker\n                      format=\"h:mm a\"\n                      name=\"timeEnd\"\n                      minTime={this.addOneHourToTime(this.props.timeStart)}\n                      onChange={(e, name)=> {this.props.handleChange(e, \"timeEnd\")}}\n                      value={this.props.timeEnd}\n                      disableClock\n                      required={true}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"heroFormBlock\">\n            <button onClick={this.props.onSubmit} className=\"resultsTop green large\" to=\"resultsTop\">find events</button>\n          </div>\n        </form>\n        \n      </div>\n    )\n  }\n}\n\nexport default SearchForm;","import React, { Component } from \"react\";\n\nclass ResultCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n        eventId1: \"\",\n        eventId2: \"\"\n    }\n  }\n  priceInfo = (event) => {\n    let priceString = \"\";\n    if (event.priceRanges){\n      let minPrice = event.priceRanges[0].min;\n      let maxPrice = event.priceRanges[0].max;\n      let currency = event.priceRanges[0].currency;\n      if (minPrice === maxPrice){\n        priceString = `Price: ${minPrice} ${currency}`\n      }\n      else{\n        priceString = `Price Range: ${minPrice} - ${maxPrice} ${currency}`\n      }\n    }\n    else{\n      priceString = \"Price Unavailable\"\n    }\n    return priceString\n  }\n  displayDate = (event) =>{\n    let daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\n    let monthsOfYear =[\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    if (event.dates.start.localTime){\n      let dateObj = new Date(`${event.dates.start.localDate}T${event.dates.start.localTime}`)\n      let day = dateObj.getDay();\n      let date = dateObj.getDate();\n      let month = dateObj.getMonth();\n      let hour = dateObj.getHours();\n      let minute = dateObj.getMinutes();\n      if (minute < 10){\n        minute = \"0\" + minute;\n      }\n      let ampm = \"\";\n      if (hour < 12){\n        ampm = \"AM\";\n      }\n      if(hour = 12){\n        ampm = \"PM\";\n        hour = 12\n      }\n      else{\n        ampm = \"PM\";\n        hour = hour - 12\n      }\n      let dateToDisplay = `${daysOfWeek[day]}, ${monthsOfYear[month]} ${date}, ${hour}:${minute} ${ampm}`\n      return dateToDisplay;\n\n    }\n    else{\n      let dateObj = new Date(`${event.dates.start.localDate}T00:00:00`);\n      let day = dateObj.getDay();\n      let date = dateObj.getDate();\n      let month = dateObj.getMonth();\n      let dateToDisplay = `${daysOfWeek[day]}, ${monthsOfYear[month]} ${date}`\n      return dateToDisplay;\n    }\n  }\n  selectedActive = (event) => {\n    if ((this.state.eventId1 === event.id && this.props.currentUser === \"1\" )|| (this.state.eventId2 === event.id && this.props.currentUser === \"2\")) {\n      return \"activeEvent\"\n    }\n    else if ((this.state.eventId1 === event.id && this.props.currentUser === \"2\" )|| (this.state.eventId2 === event.id && this.props.currentUser === \"1\")) {\n      return \"disabledEvent\"\n    }\n    return \"\";\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.user1choice.id !== prevState.eventId1) {\n      return { eventId1: nextProps.user1choice.id };\n\n    }\n    else if (nextProps.user2choice.name !== prevState.eventName2) {\n      return { eventId2: nextProps.user2choice.id };\n    }\n    else return null;\n  }\n  render() {\n    this.displayDate(this.props.event)\n    return (\n      <div className={`resultCard ${(this.selectedActive(this.props.event))}`}>\n        <form action=\"\" className=\"innerResultCard\">\n          <label htmlFor=\"selectedEvent\"></label>\n          <input\n            type=\"radio\"\n            tabIndex=\"0\"\n            id={this.props.event.id}\n            name={this.props.name}\n            onChange={(e) => this.props.handleEventSelectRadio(e, this.props.event)}\n            checked={this.props.event.id === this.state.eventId1 || this.props.event.id === this.state.eventId2}\n          />\n          <div>\n            <div className=\"resultCard-imgContainer\">\n              <img src={this.props.event.images[1].url} alt={`image for ${this.props.event.name}`} />\n            </div>\n            <div className=\"eventDetails\">\n              <h3>{this.props.event.name}</h3>\n              <p>{this.displayDate(this.props.event)}</p>\n              <p className=\"location\">{this.props.event._embedded.venues[0].name}, {this.props.event._embedded.venues[0].city.name}</p>\n              <p className=\"priceString\">{this.priceInfo(this.props.event)}</p>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\nexport default ResultCard;","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass DisplayLinks extends Component {\n  constructor() {\n    super();\n    this.modalRef = React.createRef();\n  }\n  \n  componentDidMount() {\n    this.modalRef.current.focus();\n  }\n\n  loopFocus= () => {\n    this.modalRef.current.focus();\n  }\n\n  render() {\n    return(\n      // keep empty anchor tags for keeping tab within modal\n      <div className=\"toLinks modalContent\" tabIndex=\"-1\" >\n      {/* must put a space after \"# \" for removing warning error */}\n        <a href=\"# \" className=\"keepFocusModal\" onTransitionEnd={this.loopFocus} aria-hidden=\"true\">.</a>\n\n      <button ref={this.modalRef}\n          onClick={this.props.closeModal}\n          aria-label=\"click to close the modal\">\n          <FontAwesomeIcon aria-hidden=\"true\" aria-label=\"close the box\" icon=\"times\" />\n      </button>\n        <div>{this.props.children}</div>\n\n        <h2><span>Congratulations!</span> You've both successfully chosen your events!</h2>\n        <p>You can buy your tickets here:</p>\n        <div className=\"userLink\">\n          <FontAwesomeIcon icon=\"user\" aria-hidden=\"true\" className=\"faUser\" /><p className=\"userText\">User One: <a href={this.props.user1choice.url} target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Click to get your tickets here!\">{this.props.user1choice.name}</a></p>\n        </div>\n      \n        <div className=\"userLink\">\n          <FontAwesomeIcon icon=\"user\" aria-hidden=\"true\" className=\"faUser\" /><p className=\"userText\">User Two: <a href={this.props.user2choice.url} target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Click to get your tickets here!\">{this.props.user2choice.name}</a></p>\n          <a href=\"# \" className=\"keepFocusModal\" onTransitionEnd={this.loopFocus} aria-hidden=\"true\">.</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DisplayLinks;","import React, { Component } from \"react\";\nimport DisplayLinks from \"./DisplayLinks.js\";\n\nclass Modal extends Component {\n  render() {\n    let modal = (\n      <div className=\"modalOverlay\" aria-hidden=\"true\">\n        <DisplayLinks \n          user1choice={this.props.user1choice}\n          user2choice={this.props.user2choice}\n          closeModal={this.props.closeModal}\n        />\n      </div>\n    );\n\n    if (!this.props.modalIsOpen) {\n      modal = null;\n    }\n\n    return (\n      <div>\n        {modal}\n      </div>\n    )\n  }\n}\n\nexport default Modal;","import React, { Component } from \"react\";\nimport ResultCard from \"./ResultCard.js\";\nimport Modal from \"./Modal.js\";\n// Importing libraries\nimport { animateScroll as scroll, scroller } from \"react-scroll\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nclass DisplayResults extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allEvents: [],\n      user1choice: \"\",\n      user2choice: \"\",\n      currentUser: \"1\",\n      modalIsOpen: false,\n      activeUser: false,\n    }\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n  //function to listen to user scroll and push the scroll height to state\n  handleScroll() {\n    this.setState({ scroll:\n      window.scrollY \n      })\n  }\n  //function to listen to radio buttons that toggle between user1 and user2\n  handleUserChangeRadio = (e) => {\n    this.setState({\n      currentUser: e.target.value\n    })\n  }\n\n  //function to listen to radio buttons that toggle between different events.\n  handleEventSelectRadio = (e, event) =>{\n    if(this.state.currentUser===\"1\"){\n      this.setState({\n        user1choice: event,\n      })\n    }\n    if (this.state.currentUser === \"2\") {\n      this.setState({\n        user2choice: event,\n      })\n    }\n  }\n\n  scrollLinks() {\n    scroller.scrollTo(\"toLinks\", {\n      duration: 800,\n      delay: 0,\n      smooth: \"easeInOutQuart\"\n    })\n  } \n  \n  //function that opens the modal to show event links\n  confirmBothUsersChoices = (e)=>{\n    e.preventDefault();\n    this.setState({\n      modalIsOpen: true\n    })\n  }\n  //when user pushes x, close modal.\n  closeModal = (e) => {\n    e.preventDefault();\n    this.setState({\n      modalIsOpen:false\n    })\n  }\n  //code taken from https://mattgaskey.com/blog/sticky-nav-in-react/ to achieve scroll then fix\n  componentDidMount(){\n    const barToFix = document.querySelector(\".containerUserSelectionBackground\");\n    this.setState({ top: barToFix.offsetTop, height: barToFix.offsetHeight });\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n  //code taken from https://mattgaskey.com/blog/sticky-nav-in-react/ to achieve scroll then fix\n  componentDidUpdate() {\n    this.state.scroll > this.state.top ?\n      document.body.style.paddingTop = `${this.state.height}px` :\n      document.body.style.paddingTop = 0;\n  }\n\n  render() {\n    return (\n      <div className=\"displayEvents\">\n        <div className={this.state.scroll > this.state.top ? \"containerUserSelectionBackground fixed-nav\" : \"containerUserSelectionBackground\"}>\n          <div className=\"wrapper\">\n            <form action=\"\" className=\"containerUserSelection\">\n          \n              <div className=\"containerUsers\">\n                <div className=\"user\">\n                  <div>\n                    <input onChange={(e) => { this.handleUserChangeRadio(e) }}\n                      type=\"radio\"\n                      className=\"selectedUser\"\n                      name=\"currentUser\"\n                      id=\"user1\"\n                      value=\"1\"\n                      aria-label=\"select for user one\"\n                      aria-required=\"true\"\n                      checked={this.state.currentUser === \"1\"}\n                    />\n                    <div className=\"perUserContents\">\n                      <FontAwesomeIcon icon=\"user\" aria-hidden=\"true\" />\n                      <div>\n                        <label htmlFor=\"user1\">user one</label>\n                        {this.state.user1choice ? <p>{this.state.user1choice.name} </p>: <p>Please choose an event from the list below</p>}\n                      </div>\n                    </div>\n                  </div>\n                </div>     \n\n                <div className=\"user\">\n                  <div>\n                    <input\n                      onChange={(e) => { this.handleUserChangeRadio(e) }}\n                      type=\"radio\"\n                      // tabIndex=\"0\"\n                      className=\"selectedUser\"\n                      name=\"currentUser\"\n                      id=\"user2\"\n                      value=\"2\"\n                      aria-label=\"select for user two\"\n                      aria-required=\"true\"\n                      checked={this.state.currentUser === \"2\"}\n                    />\n\n                    <div className=\"perUserContents\">\n                      <FontAwesomeIcon icon=\"user\" aria-hidden=\"true\" />\n                      <div>\n                        <label htmlFor=\"user2\">user two</label>\n                        {this.state.user2choice ? <p>{this.state.user2choice.name} </p> : <p>Please choose an event from the list below</p>}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"containerUsersButtons\">\n                {this.state.user1choice && this.state.user2choice\n                ? <div>\n                  <div className=\"containerButton\">\n                    <button className=\"navy med\"\n                      onClick={(e) => {\n                        this.confirmBothUsersChoices(e)\n                      }}\n                      aria-label=\"Confirm choices of user one and user two\"\n                      >Confirm Both Events\n                      <FontAwesomeIcon icon=\"check-double\" aria-hidden=\"true\" /> \n                    </button>\n                  </div>\n\n                    <Modal\n                      user1choice={this.state.user1choice}\n                      user2choice={this.state.user2choice}\n                      modalIsOpen={this.state.modalIsOpen}\n                      closeModal={(e) => this.closeModal(e)}\n                    ></Modal>\n                  </div>\n                : \"\"}\n                <div className=\"containerButton\">\n                  <button className=\"white med\" aria-label=\"Reloads the page to start a new search\" reset={this.reset}>New Search</button>\n                </div>\n              </div>\n            </form>\n          </div>\n           {/* wrapper ends */}\n        </div>\n\n        <div className=\"displayContent wrapper\">\n          <form action=\"submit\">\n            <div className=\"containerFilterEvents\">\n              <div className=\"filterFields\">\n                <label className=\"visuallyHidden\" htmlFor=\"textFilter\">Enter text to filter</label>\n                <input\n                  type=\"text\"\n                  onChange={(e) => { this.props.handleChange(e) }}\n                  name=\"textFilter\"\n                  value={this.props.textFilter}\n                  placeholder=\"Enter text to filter\"\n                  aria-label=\"Enter text to filter events\"\n                  />\n                <label className=\"visuallyHidden\" htmlFor=\"allCategories\">Event Categories</label>\n                <select\n                  onChange={(e) => { this.props.handleChange(e) }}\n                  name=\"categoryDropdown\" \n                  value={this.props.categoryDropdown}\n                  id=\"allCategories\">\n                  {this.props.eventCategories.map((category, i) => {\n                    return (\n                        <option value={category} key={i}> {category} </option>\n                    )\n                    }\n                  )}\n                </select>\n                \n                <label className=\"visuallyHidden\" htmlFor=\"allVenues\">All Venues</label>\n                <select\n                  onChange={(e) => { this.props.handleChange(e) }}\n                  name=\"venueDropdown\"\n                  value={this.props.venueDropdown}\n                  id=\"allVenues\">\n                  {this.props.eventVenues.map((venue, i) => {\n                    return (\n                      <option value={venue} key={i}> {venue} </option>\n                    )\n                  })}\n                </select>\n              </div> {/* Filter Fields ends */}\n\n              <div className=\"filterButtons\">\n                <button className=\"green small\"\n                  onClick={(e) => this.props.filterEvents(e, this.props.textFilter, this.props.categoryDropdown, this.props.venueDropdown)}>Filter</button>  \n                <button className=\"white small\" onClick={(e)=>this.props.resetFilters(e)}>Reset Filter</button>\n              </div>  {/* Filter Buttons ends */}\n            </div>\n          </form>\n        \n          <div className=\"containerResultCard\"> \n          {\n          this.props.filteredEvents.map((eventObject) => {\n            return (\n              <ResultCard\n                key={eventObject.id}\n                event={eventObject}\n                handleEventSelectRadio={this.handleEventSelectRadio}\n                user1choice={this.state.user1choice}\n                user2choice={this.state.user2choice}\n                tabIndex=\"0\"\n                currentUser={this.state.currentUser}\n              />\n            )\n          })}\n\n          </div>  {/* Container for Result card ends*/}\n        </div>  {/* Display content ends */}\n      </div> \n    )\n  }\n}\n\nexport default DisplayResults;","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return(\n      <footer>\n        <p>Created by CAIJ Consulting: <a href=\"http://www.canrozanes.com/\" target=\"_blank\" aria-label=\"go to Can Rozanes's website\" rel=\"noopener noreferrer\">Can</a>, <a href=\"http://www.anniebombanie.com\" target=\"_blank\" aria-label=\"go to Annie Liew's website\" rel=\"noopener noreferrer\">Annie</a>, <a href=\"http://www.irenetruong.com/\" target=\"_blank\" aria-label=\"go to Irene Truong's website\" rel=\"noopener noreferrer\">Irene</a>, and <a href=\"http://www.jamieyeung.ca/\" target=\"_blank\" aria-label=\"go to Jamie Yeung's website\" rel=\"noopener noreferrer\">Jamie</a> | Powered by <a href=\"https://developer.ticketmaster.com/products-and-docs/apis/getting-started/\" target=\"_blank\" aria-label=\"go to Ticketmaster's API website\" rel=\"noopener noreferrer\">Ticketmaster</a></p>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Intro from \"./components/Intro.js\";\nimport SearchForm from \"./components/SearchForm.js\";\nimport DisplayResults from \"./components/DisplayResults.js\";\nimport Footer from \"./components/Footer.js\"\nimport \"./styles/App.scss\";\nimport { animateScroll as scroll, scroller } from 'react-scroll';\n\n// font awesome library\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faCheckDouble, faCheck, faUser, faTimes, faSortDown } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(fab, faCheckDouble, faCheck, faUser, faTimes);\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allEvents: [],\n      timeStart: \"12:00\",\n      timeEnd: \"23:00\",\n      date: new Date(),\n      location: \"Toronto\",\n      filteredEvents: [],\n      eventCategories: [],\n      userCategory: \"\",\n      eventVenues: [],\n      userVenue: \"\",\n      isLoading: true,\n      displayResult: false,\n      textFilter: \"\",\n      categoryDropdown: \"\",\n      venueDropdown: \"\",\n      error: false,\n    }\n  }\n  //Function that handles changes on form elements.\n  handleChange = (e, name) => {\n    // our location gets the object but for dateTimePicker we get the actual value \n    // if the item onChange has (name) tsParameterProperty, do the following:\n    if (name) {\n      this.setState({\n        [name]: e\n      })\n    } else {\n      // this is for location...\n      this.setState({\n        [e.target.name]: e.target.value\n      })\n    }\n  }\n  \n  reset = () => {\n    this.setState({\n      displayResult: false,\n    })\n  }\n\n  // convert time function to string so it can be passed as a number in template literals \n  formatDate = (dateObject, time) => {\n    let year = dateObject.getFullYear();\n    let month = dateObject.getMonth() + 1;\n    if (month < 10) {\n      month = '0' + month;\n    }\n    let day = dateObject.getDate();\n    if (day < 10) {\n      day = '0' + day;\n    }\n    let hours = time.substr(0, 2);\n    let minutes = time.substr(3, 5);\n    let dateString = `${year}-${month}-${day}T${hours}:${minutes}:00`;\n    return dateString\n  }\n\n  //time input format localStartEndDateTime=2019-06-05T17:00:00,2019-06-05T20:00:00 \n  getTicketmasterData = (location, startDate, endDate) => {\n    axios.get(`https://app.ticketmaster.com/discovery/v2/events.json`, {\n      params: {\n        apikey: \"cpqJuV2A3YqkXOJylkTrDzVGLRKZ5hp5\",\n        city: location,\n        localStartEndDateTime: `${startDate}, ${endDate}`,\n      }\n      // in-case CORS error comes back\n      // dataResponse: \"jsonp\",     \n    }).then((response) => {\n      if (response.data.page.totalElements > 0) {\n        response = response.data._embedded.events;\n        this.setState({\n          // allEvents is the good return we never modify\n          allEvents: response,\n          // filteredEvents is the item we want to modify based on user input\n          filteredEvents: response,\n          isLoading: false,\n        })\n        this.getEventCategories();\n        this.getEventVenues();\n      }\n      else {\n        this.setState({\n          error: true\n        })\n\n      }\n    })\n  }\n  //go through all events that are returned from the API call and go through all the categories they belong to add all the unique categories in an array called categories.\n  getEventCategories = () => {\n    // loop through all events \n    let eventCategories = [\"All Categories\"];\n    for (let i = 0; i < this.state.allEvents.length; i++) {\n      let eventCategory = this.state.allEvents[i].classifications[0].segment.name;\n      if (!eventCategories.includes(eventCategory)) {\n        eventCategories.push(eventCategory)\n      }\n    }\n    this.setState({\n      // ... copies the items to the array\n      eventCategories: [...eventCategories],\n    })\n  }\n  //go through all events that are returned from the API call and go through all the venues they belong to add all the unique categories in an array called categories.\n  getEventVenues = () => {\n    // loop through all events \n    let eventVenues = [\"All Venues\"];\n    for (let i = 0; i < this.state.allEvents.length; i++) {\n      let eventVenue = this.state.allEvents[i]._embedded.venues[0].name;\n      if (!eventVenues.includes(eventVenue)) {\n        eventVenues.push(eventVenue)\n      }\n    }\n    this.setState({\n      // ... copies the items to the array\n      eventVenues: [...eventVenues],\n    })\n  }\n\n  //filter events based on text, category and venue.\n  filterEvents = (e, textFilter, categoryDropdown, venueDropdown) => {\n    e.preventDefault();\n    let copyOfAllEvents = [...this.state.allEvents];\n\n    const filteredEvents = copyOfAllEvents.filter((eventObj) => {\n      if (textFilter.trim().length > 0) {\n        return eventObj.name.toUpperCase().includes(textFilter.toUpperCase())\n      } else {\n        return true;\n      }\n    })\n      .filter((eventObj) => {\n        if (categoryDropdown === \"All Categories\") {\n          return true;\n        }\n        else {\n          return eventObj.classifications[0].segment.name.includes(categoryDropdown);\n        }\n      })\n      .filter((eventObj) => {\n        if (venueDropdown === \"All Venues\") {\n          return true;\n        }\n        else {\n          return eventObj._embedded.venues[0].name.includes(venueDropdown);\n        }\n      })\n    this.setState({\n      filteredEvents: [...filteredEvents],\n    })\n  }\n  //reset all the filters and return the full list of events.\n  resetFilters = (e) => {\n    e.preventDefault();\n    this.filterEvents(e, \"\", \"All Categories\", \"All Venues\")\n    this.setState({\n      textFilter: \"\",\n      categoryDropdown: \"All Categories\",\n      venueDropdown: \"All Venues\",\n    })\n  }\n  \n  scrollTo() {\n    scroller.scrollTo(\"resultsTop\", {\n      duration: 800,\n      delay: 0,\n      smooth: \"easeInOutQuart\"\n    })\n  }\n\n  //when user submits their search form, format date and make the API call\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.scrollTo();\n\n    if (this.state.timeStart && this.state.timeEnd && this.state.location &&\n      Date.parse(`01/01/2011 ${this.state.timeEnd}:00`) > Date.parse(`01/01/2011 ${this.state.timeStart}:00`)) {\n      this.setState({\n        displayResult: true,\n      })\n      const startDateTime = this.formatDate(this.state.date, this.state.timeStart);\n      const endDateTime = this.formatDate(this.state.date, this.state.timeEnd);\n      const location = this.state.location;\n      this.getTicketmasterData(location, startDateTime, endDateTime);\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <div className=\"hero wrapper\">\n            <div className=\"heroInnerContainer\">\n              <div className=\"heroBorderMiddle\">\n                <Intro />\n                <SearchForm\n                  timeStart={this.state.timeStart}\n                  timeEnd={this.state.timeEnd}\n                  date={this.state.date}\n                  handleChange={this.handleChange}\n                  onSubmit={this.onSubmit}\n                  location={this.state.location}\n                />\n              </div>\n            </div>\n          </div>\n        </header>\n\n        <main className=\"resultsTop\">\n          <div>\n            {this.state.error\n              ? (\n                <div className=\"error wrapper\">\n                  <p>Sorry, your search didn't return any events. Please adjust your search and try again.</p>\n                </div>\n              )\n              : (\n                (this.state.displayResult && (\n                  this.state.isLoading\n                    //display loading while api results being returned\n                    ? <h1 className=\"wrapper\">Getting Your Events...</h1>\n                    : <DisplayResults\n                      date={this.state.date}\n                      timeStart={this.state.timeStart}\n                      timeEnd={this.state.timeEnd}\n                      location={this.state.location}\n                      eventVenues={this.state.eventVenues}\n                      handleChange={this.handleChange}\n                      textFilter={this.state.textFilter}\n                      allEvents={this.state.allEvents}\n                      filteredEvents={this.state.filteredEvents}\n                      eventCategories={this.state.eventCategories}\n                      categoryDropdown={this.state.categoryDropdown}\n                      venueDropdown={this.state.venueDropdown}\n                      filterEvents={this.filterEvents}\n                      resetFilters={this.resetFilters}\n                    />\n                ))\n              )\n            }\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}